МАССИВ - набор данных, разделенных запятой (или др. знаком) и упорядоченных соответствие ключ-значение.
 Каждый елемент массива имеет ключ - свой идентификатор в массиве.

Массив используют для создания:
 - другой массив (многомерные)
 - спискок (вектор)
 - хеш-таблица (реализация карты)
 - словарь
 - коллекция
 - СТЕК
 - очередь

Есть 2 типа массивов:

 1 - Числовой - в качестве ключа используются числа
  <?  $arr = array( '0' => 'fwerv', '1' => 'jbhk', '2' => 'hgv', '3' => 'hghh' );
     $arr = array( 0 => 'Олег', 1 => 'Василий', 2 => 'Андрей', 3 => 'Кирил' );  ?>
 2 - Асоциативный (Именной) - в качестве ключа используются имена 
<?  $arr = ['name' => 'Катя', 'age' => '33', 'gander' => 'female'];  ?>

Элементы массива нумеруются попорядку, начиная с нуля (0).


 Создание массива возможно 2 способами:
 1) - написание списка значений череззапятую и присвоения переменной типа  Array()
<?
$arr1 = array('Андрей', 'Борис', 'Сергей' );
echo $arr1[1];// выведет Борис, т.к. начало с нуля!! ?>
2) - непосредствено присваивая ключ-значение
<?
$arr2 = array('4' => 'Мюнхен', '7' => 'Одесса', '11' => 'Киев' );
echo $arr2[7];//выведет Одесса   ?>


3) C php можно заменить () на [] при етом упуская слово array
<?
$arr = ['foo' => 'bar', 'tul' => 'bir', 'pul' => 'dir' ];

echo $arr["foo"], '<br>' ;// выведет bar
echo $arr['foo'], '<br>' ;// выведет bar
?>


4) Без указания индекса (сам php укажет)
$arr[] = 'em';
Новый елемент простого масива (списка) будет добавлен в конец массива, далее индекс с каждым новым ел. будет увеличиваться.

<?
$arr[] = 'em';
$arr[] = 'un';
$arr[] = 'all';
echo $arr[1];// выведет un - 2-й ел.


$arr = ['name' => 'Катя', 'age' => '33', 'gander' => 'female'];
echo $arr['gander'];//female
print_r($arr['gander']);//female
//print_r — Выводит удобочитаемую информацию о переменной
?>
===================================================

Доступ к элементам массива может быть осуществлен с помощью синтаксиса array[key] или array{key} - равнозначно.
<?
$arr[] = 'em';
$arr[] = 'un';
$arr[] = 'all';
echo $arr[1];//выведет un
echo '<br>';
echo $arr{1};//тоже выведет un
?>

======================================================
Выведение содержимого массива.
 - НЕ ИСПОЛЬЗОВАТЬ echo и print() с переменной, содерж.массив - ОШИБКА!!
1 - исп. print_r($arr)
2 - исп. var_dump($arr)
3 - исп. тега '<pre>' - для больших и многомерных массивов

<?
$arr = ['name' => 'Катя', 'age' => '33', 'gander' => 'female'];
echo $arr;
//ошибка
//Notice: Array to string conversion in ...\index.php on line 8
?>
<?
$arr = ['name' => 'Катя', 'age' => '33', 'gander' => 'female'];
print($arr);
//ошибка
//Notice: Array to string conversion in ...\index.php on line 8
?>

<?
$arr = ['name' => 'Катя', 'age' => '33', 'gander' => 'female'];
print_r($arr);
//Array ( [name] => Катя [age] => 33 [gander] => female )
?>

<?
$arr = ['name' => 'Катя', 'age' => '33', 'gander' => 'female'];
var_dump($arr);
//array(3) { ["name"]=> string(8) "Катя" ["age"]=> string(2) "33" ["gander"]=> string(6) "female" }
?>




<?
$arr = ['name' => 'Катя', 'age' => '33', 'gander' => 'female'];
echo '<pre>';
print_r($arr);
/*  Array
(
    [name] => Катя
    [age] => 33
    [gander] => female
)  */
?>

<?
$arr = ['name' => 'Катя', 'age' => '33', 'gander' => 'female'];
echo '<pre>';
var_dump($arr);
/* array(3) {
  ["name"]=>
  string(8) "Катя"
  ["age"]=>
  string(2) "33"
  ["gander"]=>
  string(6) "female"
}  /*